
import React from 'react';
import { AlertTriangle, CheckCircle, XCircle, Eye, Target, FileText } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';

interface DamageAnalysisProps {
  onGenerateReport: () => void;
  imageUrl?: string | null;
}

const damageTypes = [
  { type: 'Dent', severity: 'Medium', confidence: 92, position: { x: 45, y: 35 }, color: 'bg-orange-500' },
  { type: 'Scratch', severity: 'Minor', confidence: 87, position: { x: 30, y: 60 }, color: 'bg-yellow-500' },
  { type: 'Broken Light', severity: 'Major', confidence: 95, position: { x: 65, y: 25 }, color: 'bg-red-500' },
];

export const DamageAnalysis: React.FC<DamageAnalysisProps> = ({ onGenerateReport, imageUrl }) => {
  return (
    <Card className="border-0 shadow-lg">
      <CardHeader className="bg-gradient-to-r from-automotive-green to-green-600 text-white">
        <CardTitle className="flex items-center space-x-2">
          <Target className="h-5 w-5" />
          <span>Damage Detection Results</span>
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Image with damage markers */}
          <div className="relative">
            <div className="relative rounded-lg overflow-hidden bg-slate-100">
              <img
                src={imageUrl || "https://images.unsplash.com/photo-1583121274602-3e2820c69888?w=500&h=300&fit=crop"}
                alt="Vehicle analysis"
                className="w-full h-64 object-cover"
              />
              
              {/* Damage markers */}
              {damageTypes.map((damage, index) => (
                <div
                  key={index}
                  className="absolute transform -translate-x-1/2 -translate-y-1/2 group cursor-pointer"
                  style={{ 
                    left: `${damage.position.x}%`, 
                    top: `${damage.position.y}%` 
                  }}
                >
                  <div className={`w-4 h-4 ${damage.color} rounded-full border-2 border-white animate-pulse-slow`}></div>
                  <div className="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 opacity-0 group-hover:opacity-100 transition-opacity">
                    <div className="bg-black text-white text-xs rounded px-2 py-1 whitespace-nowrap">
                      {damage.type} - {damage.severity}
                    </div>
                  </div>
                </div>
              ))}
              
              <div className="absolute top-4 left-4">
                <Badge className="bg-automotive-green text-white">
                  <Eye className="h-3 w-3 mr-1" />
                  Damage Detection Complete
                </Badge>
              </div>
            </div>
          </div>

          {/* Damage list */}
          <div className="space-y-4">
            <h3 className="font-semibold text-automotive-dark mb-4">Detected Damage Types</h3>
            
            {damageTypes.map((damage, index) => (
              <div key={index} className="flex items-center justify-between p-4 bg-slate-50 rounded-lg">
                <div className="flex items-center space-x-3">
                  <div className={`w-3 h-3 ${damage.color} rounded-full`}></div>
                  <div>
                    <p className="font-medium text-automotive-dark">{damage.type}</p>
                    <p className="text-sm text-automotive-silver">Severity: {damage.severity}</p>
                  </div>
                </div>
                <div className="text-right">
                  <p className="font-semibold text-automotive-blue">{damage.confidence}%</p>
                  <p className="text-xs text-automotive-silver">Confidence</p>
                </div>
              </div>
            ))}

            <div className="pt-4 border-t">
              <div className="flex items-center justify-between mb-2">
                <span className="text-sm font-medium">Overall Assessment</span>
                <Badge variant="secondary" className="text-automotive-orange">
                  Moderate Damage
                </Badge>
              </div>
              <p className="text-sm text-automotive-silver">
                Vehicle has sustained moderate damage requiring professional repair. 
                Estimated repair time: 3-5 business days.
              </p>
            </div>

            <Button 
              onClick={onGenerateReport}
              className="w-full bg-automotive-blue hover:bg-automotive-blue/90 mt-4"
            >
              <FileText className="h-4 w-4 mr-2" />
              Generate Detailed Report
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

import React, { useState } from 'react';
import { Upload, Camera, Video, Scan, AlertTriangle, CheckCircle, XCircle, DollarSign, Clock, Car } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { UploadArea } from '@/components/UploadArea';
import { CameraCapture } from '@/components/CameraCapture';
import { VideoUpload } from '@/components/VideoUpload';
import { DamageAnalysis } from '@/components/DamageAnalysis';
import { CostEstimation } from '@/components/CostEstimation';
import { DashboardStats } from '@/components/DashboardStats';
import { RecentAnalyses } from '@/components/RecentAnalyses';
import { DetailedReport } from '@/components/DetailedReport';

const Index = () => {
  const [analysisState, setAnalysisState] = useState<'idle' | 'analyzing' | 'complete'>('idle');
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [uploadedImageUrl, setUploadedImageUrl] = useState<string | null>(null);
  const [analysisProgress, setAnalysisProgress] = useState(0);
  const [showDetailedReport, setShowDetailedReport] = useState(false);

  const handleFileUpload = (file: File) => {
    setUploadedFile(file);
    setAnalysisState('analyzing');
    setAnalysisProgress(0);
    
    // Create object URL for the uploaded image
    const imageUrl = URL.createObjectURL(file);
    setUploadedImageUrl(imageUrl);

    // Simulate AI analysis progress
    const interval = setInterval(() => {
      setAnalysisProgress((prev) => {
        if (prev >= 100) {
          clearInterval(interval);
          setAnalysisState('complete');
          return 100;
        }
        return prev + 10;
      });
    }, 300);
  };

  const resetAnalysis = () => {
    setAnalysisState('idle');
    setUploadedFile(null);
    if (uploadedImageUrl) {
      URL.revokeObjectURL(uploadedImageUrl);
    }
    setUploadedImageUrl(null);
    setAnalysisProgress(0);
    setShowDetailedReport(false);
  };

  const handleGenerateReport = () => {
    setShowDetailedReport(true);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      {/* Header */}
      <header className="bg-white border-b border-slate-200 shadow-sm">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="bg-automotive-blue rounded-lg p-2">
                <Car className="h-6 w-6 text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold text-automotive-dark">VehicleAI</h1>
                <p className="text-sm text-automotive-silver">Real-time Damage Detection System</p>
              </div>
            </div>
            <div className="flex items-center space-x-2">
              <Badge variant="outline" className="text-automotive-blue border-automotive-blue">
                <Scan className="h-3 w-3 mr-1" />
                AI Powered
              </Badge>
              <Badge variant="outline" className="text-automotive-green border-automotive-green">
                Cloud Ready
              </Badge>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Main Analysis Area */}
          <div className="lg:col-span-2 space-y-6">
            <Card className="border-0 shadow-lg">
              <CardHeader className="bg-gradient-to-r from-automotive-blue to-automotive-blue-light text-white rounded-t-lg">
                <CardTitle className="flex items-center space-x-2">
                  <Scan className="h-5 w-5" />
                  <span>Vehicle Damage Analysis</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="p-6">
                <Tabs defaultValue="upload" className="w-full">
                  <TabsList className="grid w-full grid-cols-3 mb-6">
                    <TabsTrigger value="upload" className="flex items-center space-x-2">
                      <Upload className="h-4 w-4" />
                      <span>Upload</span>
                    </TabsTrigger>
                    <TabsTrigger value="camera" className="flex items-center space-x-2">
                      <Camera className="h-4 w-4" />
                      <span>Camera</span>
                    </TabsTrigger>
                    <TabsTrigger value="video" className="flex items-center space-x-2">
                      <Video className="h-4 w-4" />
                      <span>Video</span>
                    </TabsTrigger>
                  </TabsList>

                  <TabsContent value="upload">
                    <UploadArea 
                      onFileUpload={handleFileUpload}
                      analysisState={analysisState}
                      uploadedFile={uploadedFile}
                      onReset={resetAnalysis}
                    />
                  </TabsContent>

                  <TabsContent value="camera">
                    <CameraCapture 
                      onCapture={handleFileUpload}
                      analysisState={analysisState}
                      onReset={resetAnalysis}
                    />
                  </TabsContent>

                  <TabsContent value="video">
                    <VideoUpload 
                      onVideoUpload={handleFileUpload}
                      analysisState={analysisState}
                      uploadedFile={uploadedFile}
                      onReset={resetAnalysis}
                    />
                  </TabsContent>
                </Tabs>

                {analysisState === 'analyzing' && (
                  <div className="mt-6 space-y-4">
                    <div className="flex items-center justify-between">
                      <span className="text-sm font-medium text-automotive-dark">Processing Analysis...</span>
                      <span className="text-sm text-automotive-silver">{analysisProgress}%</span>
                    </div>
                    <Progress value={analysisProgress} className="h-2" />
                    <div className="flex items-center space-x-2 text-sm text-automotive-silver">
                      <div className="animate-pulse-slow">
                        <Scan className="h-4 w-4" />
                      </div>
                      <span>AI is analyzing vehicle damage patterns...</span>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>

            {analysisState === 'complete' && !showDetailedReport && (
              <DamageAnalysis 
                onGenerateReport={handleGenerateReport} 
                imageUrl={uploadedImageUrl}
              />
            )}

            {showDetailedReport && <DetailedReport onBack={() => setShowDetailedReport(false)} />}
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            <DashboardStats />
            {analysisState === 'complete' && <CostEstimation />}
            <RecentAnalyses />
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;
